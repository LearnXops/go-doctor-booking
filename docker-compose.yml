version: '3.8'

services:
  db:
    image: postgres:13-alpine
    container_name: doctor_booking_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: doctor_booking
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend service
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: doctor_booking_api
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=doctor_booking
      - DB_PORT=5432
      - JWT_SECRET=your_jwt_secret_key_here
      - ENV=development
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # Frontend service (to be added later)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   depends_on:
  #     - api
  #   environment:
  #     - REACT_APP_API_URL=http://localhost:8080/api/v1

volumes:
  postgres_data:
